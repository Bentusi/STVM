Nonterminals useless in grammar

    enum_type
    enum_values


Terminals unused in grammar

    TOD_LITERAL
    DT_LITERAL
    PRAGMA
    EXPORT
    VAR_ACCESS
    TYPE_WORD
    TYPE_DWORD
    TYPE_LWORD
    TYPE_SINT
    TYPE_LINT
    TYPE_USINT
    TYPE_UINT
    TYPE_UDINT
    TYPE_ULINT
    TYPE_WSTRING
    TYPE_DATE
    TYPE_TIME_OF_DAY
    TYPE_DATE_AND_TIME
    TYPE_UNION
    END_UNION
    TYPE_ENUM
    END_ENUM
    LBRACE
    RBRACE
    ERROR_TOKEN


Rules useless in grammar

  153 enum_type: TYPE_ENUM enum_values END_ENUM

  154 enum_values: IDENTIFIER
  155            | enum_values COMMA IDENTIFIER


State 9 conflicts: 30 shift/reduce, 18 reduce/reduce
State 10 conflicts: 12 shift/reduce
State 23 conflicts: 1 shift/reduce
State 40 conflicts: 17 shift/reduce
State 46 conflicts: 18 shift/reduce
State 100 conflicts: 13 shift/reduce
State 111 conflicts: 12 shift/reduce
State 122 conflicts: 17 shift/reduce
State 140 conflicts: 17 shift/reduce
State 150 conflicts: 17 shift/reduce
State 200 conflicts: 1 shift/reduce
State 207 conflicts: 12 shift/reduce
State 215 conflicts: 17 shift/reduce
State 220 conflicts: 17 shift/reduce
State 223 conflicts: 17 shift/reduce
State 238 conflicts: 17 shift/reduce
State 244 conflicts: 17 shift/reduce
State 248 conflicts: 9 shift/reduce
State 263 conflicts: 17 shift/reduce
State 267 conflicts: 17 shift/reduce
State 272 conflicts: 12 shift/reduce
State 282 conflicts: 17 shift/reduce
State 284 conflicts: 17 shift/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: import_list program_declaration
    2                 | program_declaration
    3                 | import_list library_declaration
    4                 | library_declaration

    5 import_list: import_declaration
    6            | import_list import_declaration

    7 import_declaration: IMPORT IDENTIFIER SEMICOLON
    8                   | IMPORT IDENTIFIER AS IDENTIFIER SEMICOLON
    9                   | IMPORT IDENTIFIER FROM STRING_LITERAL SEMICOLON
   10                   | IMPORT IDENTIFIER AS IDENTIFIER FROM STRING_LITERAL SEMICOLON

   11 program_declaration: PROGRAM IDENTIFIER declaration_list statement_list END_PROGRAM
   12                    | PROGRAM IDENTIFIER statement_list END_PROGRAM
   13                    | PROGRAM IDENTIFIER declaration_list END_PROGRAM
   14                    | PROGRAM IDENTIFIER END_PROGRAM

   15 library_declaration: LIBRARY IDENTIFIER VERSION STRING_LITERAL declaration_list END_LIBRARY
   16                    | LIBRARY IDENTIFIER declaration_list END_LIBRARY

   17 declaration_list: ε
   18                 | declaration
   19                 | declaration_list declaration

   20 declaration: var_declaration
   21            | function_declaration
   22            | type_declaration

   23 var_declaration: var_category var_list END_VAR

   24 var_category: VAR
   25             | VAR_INPUT
   26             | VAR_OUTPUT
   27             | VAR_IN_OUT
   28             | VAR_EXTERNAL
   29             | VAR_GLOBAL
   30             | VAR_CONSTANT
   31             | VAR_TEMP
   32             | VAR_CONFIG

   33 var_list: var_item
   34         | var_list var_item

   35 var_item: IDENTIFIER COLON type_specifier SEMICOLON
   36         | IDENTIFIER COLON type_specifier ASSIGN expression SEMICOLON
   37         | IDENTIFIER COLON array_type SEMICOLON

   38 type_specifier: basic_type
   39               | array_type
   40               | struct_type
   41               | IDENTIFIER

   42 basic_type: TYPE_BOOL
   43           | TYPE_BYTE
   44           | TYPE_INT
   45           | TYPE_DINT
   46           | TYPE_REAL
   47           | TYPE_LREAL
   48           | TYPE_STRING
   49           | TYPE_TIME

   50 array_type: TYPE_ARRAY LBRACKET array_bounds RBRACKET OF type_specifier

   51 array_bounds: bound_specification
   52             | array_bounds COMMA bound_specification

   53 bound_specification: INTEGER_LITERAL RANGE INTEGER_LITERAL

   54 struct_type: TYPE_STRUCT struct_members END_STRUCT

   55 struct_members: var_item
   56               | struct_members var_item

   57 type_declaration: TYPE IDENTIFIER COLON type_specifier SEMICOLON END_TYPE

   58 function_declaration: function_type IDENTIFIER COLON type_specifier declaration_list statement_list END_FUNCTION
   59                     | function_type IDENTIFIER LPAREN parameter_list RPAREN COLON type_specifier declaration_list statement_list END_FUNCTION
   60                     | function_type IDENTIFIER declaration_list statement_list END_FUNCTION_BLOCK

   61 function_type: FUNCTION
   62              | FUNCTION_BLOCK

   63 parameter_list: ε
   64               | parameter_declaration
   65               | parameter_list SEMICOLON parameter_declaration

   66 parameter_declaration: parameter_category IDENTIFIER COLON type_specifier
   67                      | parameter_category IDENTIFIER COLON type_specifier ASSIGN expression

   68 parameter_category: ε
   69                   | VAR_INPUT
   70                   | VAR_OUTPUT
   71                   | VAR_IN_OUT

   72 statement_list: ε
   73               | statement
   74               | statement_list statement

   75 statement: assignment_statement SEMICOLON
   76          | expression_statement SEMICOLON
   77          | if_statement
   78          | case_statement
   79          | for_statement
   80          | while_statement
   81          | repeat_statement
   82          | return_statement SEMICOLON
   83          | exit_statement SEMICOLON
   84          | continue_statement SEMICOLON

   85 assignment_statement: primary_expr ASSIGN expression

   86 expression_statement: function_call

   87 if_statement: IF expression THEN statement_list END_IF
   88             | IF expression THEN statement_list ELSE statement_list END_IF
   89             | IF expression THEN statement_list elsif_list END_IF
   90             | IF expression THEN statement_list elsif_list ELSE statement_list END_IF

   91 elsif_list: elsif_statement
   92           | elsif_list elsif_statement

   93 elsif_statement: ELSIF expression THEN statement_list

   94 case_statement: CASE expression OF case_list END_CASE
   95               | CASE expression OF case_list ELSE statement_list END_CASE

   96 case_list: case_item
   97          | case_list case_item

   98 case_item: case_values COLON statement_list

   99 case_values: expression
  100            | case_values COMMA expression

  101 for_statement: FOR IDENTIFIER ASSIGN expression TO expression DO statement_list END_FOR
  102              | FOR IDENTIFIER ASSIGN expression TO expression BY expression DO statement_list END_FOR

  103 while_statement: WHILE expression DO statement_list END_WHILE

  104 repeat_statement: REPEAT statement_list UNTIL expression END_REPEAT

  105 return_statement: RETURN
  106                 | RETURN expression

  107 exit_statement: EXIT

  108 continue_statement: CONTINUE

  109 expression: logical_expr

  110 logical_expr: comparison_expr
  111             | logical_expr AND comparison_expr
  112             | logical_expr OR comparison_expr
  113             | logical_expr XOR comparison_expr

  114 comparison_expr: additive_expr
  115                | comparison_expr EQ additive_expr
  116                | comparison_expr NE additive_expr
  117                | comparison_expr LT additive_expr
  118                | comparison_expr LE additive_expr
  119                | comparison_expr GT additive_expr
  120                | comparison_expr GE additive_expr

  121 additive_expr: multiplicative_expr
  122              | additive_expr PLUS multiplicative_expr
  123              | additive_expr MINUS multiplicative_expr

  124 multiplicative_expr: unary_expr
  125                    | multiplicative_expr MULTIPLY unary_expr
  126                    | multiplicative_expr DIVIDE unary_expr
  127                    | multiplicative_expr MOD unary_expr
  128                    | multiplicative_expr POWER unary_expr

  129 unary_expr: primary_expr
  130           | NOT unary_expr
  131           | MINUS unary_expr
  132           | PLUS unary_expr

  133 primary_expr: INTEGER_LITERAL
  134             | REAL_LITERAL
  135             | BOOL_LITERAL
  136             | STRING_LITERAL
  137             | WSTRING_LITERAL
  138             | TIME_LITERAL
  139             | DATE_LITERAL
  140             | IDENTIFIER
  141             | function_call
  142             | array_access
  143             | member_access
  144             | LPAREN expression RPAREN

  145 function_call: IDENTIFIER LPAREN RPAREN
  146              | IDENTIFIER LPAREN argument_list RPAREN
  147              | IDENTIFIER DOT IDENTIFIER LPAREN RPAREN
  148              | IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN

  149 argument_list: expression
  150              | argument_list COMMA expression

  151 array_access: primary_expr LBRACKET argument_list RBRACKET

  152 member_access: primary_expr DOT IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_LITERAL <integer> (258) 53 133
    REAL_LITERAL <real> (259) 134
    BOOL_LITERAL <boolean> (260) 135
    STRING_LITERAL <string> (261) 9 10 15 136
    WSTRING_LITERAL <string> (262) 137
    TIME_LITERAL <string> (263) 138
    DATE_LITERAL <string> (264) 139
    TOD_LITERAL <string> (265)
    DT_LITERAL <string> (266)
    IDENTIFIER <string> (267) 7 8 9 10 11 12 13 14 15 16 35 36 37 41 57 58 59 60 66 67 101 102 140 145 146 147 148 152
    PRAGMA <string> (268)
    PROGRAM (269) 11 12 13 14
    END_PROGRAM (270) 11 12 13 14
    FUNCTION (271) 61
    END_FUNCTION (272) 58 59
    FUNCTION_BLOCK (273) 62
    END_FUNCTION_BLOCK (274) 60
    LIBRARY (275) 15 16
    END_LIBRARY (276) 15 16
    IMPORT (277) 7 8 9 10
    FROM (278) 9 10
    AS (279) 8 10
    EXPORT (280)
    VERSION (281) 15
    VAR (282) 24
    END_VAR (283) 23
    VAR_INPUT (284) 25 69
    VAR_OUTPUT (285) 26 70
    VAR_IN_OUT (286) 27 71
    VAR_EXTERNAL (287) 28
    VAR_GLOBAL (288) 29
    VAR_ACCESS (289)
    VAR_TEMP (290) 31
    VAR_CONFIG (291) 32
    VAR_CONSTANT (292) 30
    IF (293) 87 88 89 90
    THEN (294) 87 88 89 90 93
    ELSE (295) 88 90 95
    ELSIF (296) 93
    END_IF (297) 87 88 89 90
    CASE (298) 94 95
    OF (299) 50 94 95
    END_CASE (300) 94 95
    FOR (301) 101 102
    TO (302) 101 102
    BY (303) 102
    DO (304) 101 102 103
    END_FOR (305) 101 102
    WHILE (306) 103
    END_WHILE (307) 103
    REPEAT (308) 104
    UNTIL (309) 104
    END_REPEAT (310) 104
    EXIT (311) 107
    CONTINUE (312) 108
    RETURN (313) 105 106
    TYPE_BOOL (314) 42
    TYPE_BYTE (315) 43
    TYPE_WORD (316)
    TYPE_DWORD (317)
    TYPE_LWORD (318)
    TYPE_SINT (319)
    TYPE_INT (320) 44
    TYPE_DINT (321) 45
    TYPE_LINT (322)
    TYPE_USINT (323)
    TYPE_UINT (324)
    TYPE_UDINT (325)
    TYPE_ULINT (326)
    TYPE_REAL (327) 46
    TYPE_LREAL (328) 47
    TYPE_STRING (329) 48
    TYPE_WSTRING (330)
    TYPE_TIME (331) 49
    TYPE_DATE (332)
    TYPE_TIME_OF_DAY (333)
    TYPE_DATE_AND_TIME (334)
    TYPE_ARRAY (335) 50
    TYPE_STRUCT (336) 54
    END_STRUCT (337) 54
    TYPE_UNION (338)
    END_UNION (339)
    TYPE_ENUM (340)
    END_ENUM (341)
    TYPE (342) 57
    END_TYPE (343) 57
    ASSIGN (344) 36 67 85 101 102
    EQ (345) 115
    NE (346) 116
    LT (347) 117
    LE (348) 118
    GT (349) 119
    GE (350) 120
    PLUS (351) 122 132
    MINUS (352) 123 131
    MULTIPLY (353) 125
    DIVIDE (354) 126
    MOD (355) 127
    POWER (356) 128
    AND (357) 111
    OR (358) 112
    XOR (359) 113
    NOT (360) 130
    LPAREN (361) 59 144 145 146 147 148
    RPAREN (362) 59 144 145 146 147 148
    LBRACKET (363) 50 151
    RBRACKET (364) 50 151
    LBRACE (365)
    RBRACE (366)
    SEMICOLON (367) 7 8 9 10 35 36 37 57 65 75 76 82 83 84
    COLON (368) 35 36 37 57 58 59 66 67 98
    COMMA (369) 52 100 150
    DOT (370) 147 148 152
    RANGE (371) 53
    ERROR_TOKEN (372)
    UMINUS (373)
    UPLUS (374)


Nonterminals, with rules where they appear

    $accept (120)
        on left: 0
    compilation_unit <node> (121)
        on left: 1 2 3 4
        on right: 0
    import_list <node> (122)
        on left: 5 6
        on right: 1 3 6
    import_declaration <node> (123)
        on left: 7 8 9 10
        on right: 5 6
    program_declaration <node> (124)
        on left: 11 12 13 14
        on right: 1 2
    library_declaration <node> (125)
        on left: 15 16
        on right: 3 4
    declaration_list <node> (126)
        on left: 17 18 19
        on right: 11 13 15 16 19 58 59 60
    declaration <node> (127)
        on left: 20 21 22
        on right: 18 19
    var_declaration <node> (128)
        on left: 23
        on right: 20
    var_category <var_type> (129)
        on left: 24 25 26 27 28 29 30 31 32
        on right: 23
    var_list <node> (130)
        on left: 33 34
        on right: 23 34
    var_item <node> (131)
        on left: 35 36 37
        on right: 33 34 55 56
    type_specifier <type> (132)
        on left: 38 39 40 41
        on right: 35 36 50 57 58 59 66 67
    basic_type <type> (133)
        on left: 42 43 44 45 46 47 48 49
        on right: 38
    array_type <node> (134)
        on left: 50
        on right: 37 39
    array_bounds <node> (135)
        on left: 51 52
        on right: 50 52
    bound_specification <node> (136)
        on left: 53
        on right: 51 52
    struct_type <node> (137)
        on left: 54
        on right: 40
    struct_members <node> (138)
        on left: 55 56
        on right: 54 56
    type_declaration <node> (139)
        on left: 57
        on right: 22
    function_declaration <node> (140)
        on left: 58 59 60
        on right: 21
    function_type <func_type> (141)
        on left: 61 62
        on right: 58 59 60
    parameter_list <node> (142)
        on left: 63 64 65
        on right: 59 65
    parameter_declaration <node> (143)
        on left: 66 67
        on right: 64 65
    parameter_category <param_type> (144)
        on left: 68 69 70 71
        on right: 66 67
    statement_list <node> (145)
        on left: 72 73 74
        on right: 11 12 58 59 60 74 87 88 89 90 93 95 98 101 102 103 104
    statement <node> (146)
        on left: 75 76 77 78 79 80 81 82 83 84
        on right: 73 74
    assignment_statement <node> (147)
        on left: 85
        on right: 75
    expression_statement <node> (148)
        on left: 86
        on right: 76
    if_statement <node> (149)
        on left: 87 88 89 90
        on right: 77
    elsif_list <node> (150)
        on left: 91 92
        on right: 89 90 92
    elsif_statement <node> (151)
        on left: 93
        on right: 91 92
    case_statement <node> (152)
        on left: 94 95
        on right: 78
    case_list <node> (153)
        on left: 96 97
        on right: 94 95 97
    case_item <node> (154)
        on left: 98
        on right: 96 97
    case_values <node> (155)
        on left: 99 100
        on right: 98 100
    for_statement <node> (156)
        on left: 101 102
        on right: 79
    while_statement <node> (157)
        on left: 103
        on right: 80
    repeat_statement <node> (158)
        on left: 104
        on right: 81
    return_statement <node> (159)
        on left: 105 106
        on right: 82
    exit_statement <node> (160)
        on left: 107
        on right: 83
    continue_statement <node> (161)
        on left: 108
        on right: 84
    expression <node> (162)
        on left: 109
        on right: 36 67 85 87 88 89 90 93 94 95 99 100 101 102 103 104 106 144 149 150
    logical_expr <node> (163)
        on left: 110 111 112 113
        on right: 109 111 112 113
    comparison_expr <node> (164)
        on left: 114 115 116 117 118 119 120
        on right: 110 111 112 113 115 116 117 118 119 120
    additive_expr <node> (165)
        on left: 121 122 123
        on right: 114 115 116 117 118 119 120 122 123
    multiplicative_expr <node> (166)
        on left: 124 125 126 127 128
        on right: 121 122 123 125 126 127 128
    unary_expr <node> (167)
        on left: 129 130 131 132
        on right: 124 125 126 127 128 130 131 132
    primary_expr <node> (168)
        on left: 133 134 135 136 137 138 139 140 141 142 143 144
        on right: 85 129 151 152
    function_call <node> (169)
        on left: 145 146 147 148
        on right: 86 141
    argument_list <node> (170)
        on left: 149 150
        on right: 146 148 150 151
    array_access <node> (171)
        on left: 151
        on right: 142
    member_access <node> (172)
        on left: 152
        on right: 143


State 0

    0 $accept: • compilation_unit $end

    PROGRAM  shift, and go to state 1
    LIBRARY  shift, and go to state 2
    IMPORT   shift, and go to state 3

    compilation_unit     go to state 4
    import_list          go to state 5
    import_declaration   go to state 6
    program_declaration  go to state 7
    library_declaration  go to state 8


State 1

   11 program_declaration: PROGRAM • IDENTIFIER declaration_list statement_list END_PROGRAM
   12                    | PROGRAM • IDENTIFIER statement_list END_PROGRAM
   13                    | PROGRAM • IDENTIFIER declaration_list END_PROGRAM
   14                    | PROGRAM • IDENTIFIER END_PROGRAM

    IDENTIFIER  shift, and go to state 9


State 2

   15 library_declaration: LIBRARY • IDENTIFIER VERSION STRING_LITERAL declaration_list END_LIBRARY
   16                    | LIBRARY • IDENTIFIER declaration_list END_LIBRARY

    IDENTIFIER  shift, and go to state 10


State 3

    7 import_declaration: IMPORT • IDENTIFIER SEMICOLON
    8                   | IMPORT • IDENTIFIER AS IDENTIFIER SEMICOLON
    9                   | IMPORT • IDENTIFIER FROM STRING_LITERAL SEMICOLON
   10                   | IMPORT • IDENTIFIER AS IDENTIFIER FROM STRING_LITERAL SEMICOLON

    IDENTIFIER  shift, and go to state 11


State 4

    0 $accept: compilation_unit • $end

    $end  shift, and go to state 12


State 5

    1 compilation_unit: import_list • program_declaration
    3                 | import_list • library_declaration
    6 import_list: import_list • import_declaration

    PROGRAM  shift, and go to state 1
    LIBRARY  shift, and go to state 2
    IMPORT   shift, and go to state 3

    import_declaration   go to state 13
    program_declaration  go to state 14
    library_declaration  go to state 15


State 6

    5 import_list: import_declaration •

    $default  reduce using rule 5 (import_list)


State 7

    2 compilation_unit: program_declaration •

    $default  reduce using rule 2 (compilation_unit)


State 8

    4 compilation_unit: library_declaration •

    $default  reduce using rule 4 (compilation_unit)


State 9

   11 program_declaration: PROGRAM IDENTIFIER • declaration_list statement_list END_PROGRAM
   12                    | PROGRAM IDENTIFIER • statement_list END_PROGRAM
   13                    | PROGRAM IDENTIFIER • declaration_list END_PROGRAM
   14                    | PROGRAM IDENTIFIER • END_PROGRAM

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    END_PROGRAM      shift, and go to state 24
    FUNCTION         shift, and go to state 25
    FUNCTION_BLOCK   shift, and go to state 26
    VAR              shift, and go to state 27
    VAR_INPUT        shift, and go to state 28
    VAR_OUTPUT       shift, and go to state 29
    VAR_IN_OUT       shift, and go to state 30
    VAR_EXTERNAL     shift, and go to state 31
    VAR_GLOBAL       shift, and go to state 32
    VAR_TEMP         shift, and go to state 33
    VAR_CONFIG       shift, and go to state 34
    VAR_CONSTANT     shift, and go to state 35
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    TYPE             shift, and go to state 44
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 17 (declaration_list)]
    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 17 (declaration_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 17 (declaration_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 17 (declaration_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 17 (declaration_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 17 (declaration_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 17 (declaration_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 17 (declaration_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    END_PROGRAM      [reduce using rule 17 (declaration_list)]
    END_PROGRAM      [reduce using rule 72 (statement_list)]
    FUNCTION         [reduce using rule 17 (declaration_list)]
    FUNCTION_BLOCK   [reduce using rule 17 (declaration_list)]
    VAR              [reduce using rule 17 (declaration_list)]
    VAR_INPUT        [reduce using rule 17 (declaration_list)]
    VAR_OUTPUT       [reduce using rule 17 (declaration_list)]
    VAR_IN_OUT       [reduce using rule 17 (declaration_list)]
    VAR_EXTERNAL     [reduce using rule 17 (declaration_list)]
    VAR_GLOBAL       [reduce using rule 17 (declaration_list)]
    VAR_TEMP         [reduce using rule 17 (declaration_list)]
    VAR_CONFIG       [reduce using rule 17 (declaration_list)]
    VAR_CONSTANT     [reduce using rule 17 (declaration_list)]
    IF               [reduce using rule 17 (declaration_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 17 (declaration_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 17 (declaration_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 17 (declaration_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 17 (declaration_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 17 (declaration_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 17 (declaration_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 17 (declaration_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    TYPE             [reduce using rule 17 (declaration_list)]
    LPAREN           [reduce using rule 17 (declaration_list)]
    LPAREN           [reduce using rule 72 (statement_list)]

    declaration_list      go to state 46
    declaration           go to state 47
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52
    statement_list        go to state 53
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 10

   15 library_declaration: LIBRARY IDENTIFIER • VERSION STRING_LITERAL declaration_list END_LIBRARY
   16                    | LIBRARY IDENTIFIER • declaration_list END_LIBRARY

    FUNCTION        shift, and go to state 25
    FUNCTION_BLOCK  shift, and go to state 26
    VERSION         shift, and go to state 69
    VAR             shift, and go to state 27
    VAR_INPUT       shift, and go to state 28
    VAR_OUTPUT      shift, and go to state 29
    VAR_IN_OUT      shift, and go to state 30
    VAR_EXTERNAL    shift, and go to state 31
    VAR_GLOBAL      shift, and go to state 32
    VAR_TEMP        shift, and go to state 33
    VAR_CONFIG      shift, and go to state 34
    VAR_CONSTANT    shift, and go to state 35
    TYPE            shift, and go to state 44

    FUNCTION        [reduce using rule 17 (declaration_list)]
    FUNCTION_BLOCK  [reduce using rule 17 (declaration_list)]
    VAR             [reduce using rule 17 (declaration_list)]
    VAR_INPUT       [reduce using rule 17 (declaration_list)]
    VAR_OUTPUT      [reduce using rule 17 (declaration_list)]
    VAR_IN_OUT      [reduce using rule 17 (declaration_list)]
    VAR_EXTERNAL    [reduce using rule 17 (declaration_list)]
    VAR_GLOBAL      [reduce using rule 17 (declaration_list)]
    VAR_TEMP        [reduce using rule 17 (declaration_list)]
    VAR_CONFIG      [reduce using rule 17 (declaration_list)]
    VAR_CONSTANT    [reduce using rule 17 (declaration_list)]
    TYPE            [reduce using rule 17 (declaration_list)]
    $default        reduce using rule 17 (declaration_list)

    declaration_list      go to state 70
    declaration           go to state 47
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52


State 11

    7 import_declaration: IMPORT IDENTIFIER • SEMICOLON
    8                   | IMPORT IDENTIFIER • AS IDENTIFIER SEMICOLON
    9                   | IMPORT IDENTIFIER • FROM STRING_LITERAL SEMICOLON
   10                   | IMPORT IDENTIFIER • AS IDENTIFIER FROM STRING_LITERAL SEMICOLON

    FROM       shift, and go to state 71
    AS         shift, and go to state 72
    SEMICOLON  shift, and go to state 73


State 12

    0 $accept: compilation_unit $end •

    $default  accept


State 13

    6 import_list: import_list import_declaration •

    $default  reduce using rule 6 (import_list)


State 14

    1 compilation_unit: import_list program_declaration •

    $default  reduce using rule 1 (compilation_unit)


State 15

    3 compilation_unit: import_list library_declaration •

    $default  reduce using rule 3 (compilation_unit)


State 16

  133 primary_expr: INTEGER_LITERAL •

    $default  reduce using rule 133 (primary_expr)


State 17

  134 primary_expr: REAL_LITERAL •

    $default  reduce using rule 134 (primary_expr)


State 18

  135 primary_expr: BOOL_LITERAL •

    $default  reduce using rule 135 (primary_expr)


State 19

  136 primary_expr: STRING_LITERAL •

    $default  reduce using rule 136 (primary_expr)


State 20

  137 primary_expr: WSTRING_LITERAL •

    $default  reduce using rule 137 (primary_expr)


State 21

  138 primary_expr: TIME_LITERAL •

    $default  reduce using rule 138 (primary_expr)


State 22

  139 primary_expr: DATE_LITERAL •

    $default  reduce using rule 139 (primary_expr)


State 23

  140 primary_expr: IDENTIFIER •
  145 function_call: IDENTIFIER • LPAREN RPAREN
  146              | IDENTIFIER • LPAREN argument_list RPAREN
  147              | IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN
  148              | IDENTIFIER • DOT IDENTIFIER LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 74
    DOT     shift, and go to state 75

    DOT       [reduce using rule 140 (primary_expr)]
    $default  reduce using rule 140 (primary_expr)


State 24

   14 program_declaration: PROGRAM IDENTIFIER END_PROGRAM •

    $default  reduce using rule 14 (program_declaration)


State 25

   61 function_type: FUNCTION •

    $default  reduce using rule 61 (function_type)


State 26

   62 function_type: FUNCTION_BLOCK •

    $default  reduce using rule 62 (function_type)


State 27

   24 var_category: VAR •

    $default  reduce using rule 24 (var_category)


State 28

   25 var_category: VAR_INPUT •

    $default  reduce using rule 25 (var_category)


State 29

   26 var_category: VAR_OUTPUT •

    $default  reduce using rule 26 (var_category)


State 30

   27 var_category: VAR_IN_OUT •

    $default  reduce using rule 27 (var_category)


State 31

   28 var_category: VAR_EXTERNAL •

    $default  reduce using rule 28 (var_category)


State 32

   29 var_category: VAR_GLOBAL •

    $default  reduce using rule 29 (var_category)


State 33

   31 var_category: VAR_TEMP •

    $default  reduce using rule 31 (var_category)


State 34

   32 var_category: VAR_CONFIG •

    $default  reduce using rule 32 (var_category)


State 35

   30 var_category: VAR_CONSTANT •

    $default  reduce using rule 30 (var_category)


State 36

   87 if_statement: IF • expression THEN statement_list END_IF
   88             | IF • expression THEN statement_list ELSE statement_list END_IF
   89             | IF • expression THEN statement_list elsif_list END_IF
   90             | IF • expression THEN statement_list elsif_list ELSE statement_list END_IF

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 79
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 37

   94 case_statement: CASE • expression OF case_list END_CASE
   95               | CASE • expression OF case_list ELSE statement_list END_CASE

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 87
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 38

  101 for_statement: FOR • IDENTIFIER ASSIGN expression TO expression DO statement_list END_FOR
  102              | FOR • IDENTIFIER ASSIGN expression TO expression BY expression DO statement_list END_FOR

    IDENTIFIER  shift, and go to state 88


State 39

  103 while_statement: WHILE • expression DO statement_list END_WHILE

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 89
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 40

  104 repeat_statement: REPEAT • statement_list UNTIL expression END_REPEAT

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 90
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 41

  107 exit_statement: EXIT •

    $default  reduce using rule 107 (exit_statement)


State 42

  108 continue_statement: CONTINUE •

    $default  reduce using rule 108 (continue_statement)


State 43

  105 return_statement: RETURN •
  106                 | RETURN • expression

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    $default  reduce using rule 105 (return_statement)

    expression           go to state 91
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 44

   57 type_declaration: TYPE • IDENTIFIER COLON type_specifier SEMICOLON END_TYPE

    IDENTIFIER  shift, and go to state 92


State 45

  144 primary_expr: LPAREN • expression RPAREN

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 93
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 46

   11 program_declaration: PROGRAM IDENTIFIER declaration_list • statement_list END_PROGRAM
   13                    | PROGRAM IDENTIFIER declaration_list • END_PROGRAM
   19 declaration_list: declaration_list • declaration

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    END_PROGRAM      shift, and go to state 94
    FUNCTION         shift, and go to state 25
    FUNCTION_BLOCK   shift, and go to state 26
    VAR              shift, and go to state 27
    VAR_INPUT        shift, and go to state 28
    VAR_OUTPUT       shift, and go to state 29
    VAR_IN_OUT       shift, and go to state 30
    VAR_EXTERNAL     shift, and go to state 31
    VAR_GLOBAL       shift, and go to state 32
    VAR_TEMP         shift, and go to state 33
    VAR_CONFIG       shift, and go to state 34
    VAR_CONSTANT     shift, and go to state 35
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    TYPE             shift, and go to state 44
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    END_PROGRAM      [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]

    declaration           go to state 95
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52
    statement_list        go to state 96
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 47

   18 declaration_list: declaration •

    $default  reduce using rule 18 (declaration_list)


State 48

   20 declaration: var_declaration •

    $default  reduce using rule 20 (declaration)


State 49

   23 var_declaration: var_category • var_list END_VAR

    IDENTIFIER  shift, and go to state 97

    var_list  go to state 98
    var_item  go to state 99


State 50

   22 declaration: type_declaration •

    $default  reduce using rule 22 (declaration)


State 51

   21 declaration: function_declaration •

    $default  reduce using rule 21 (declaration)


State 52

   58 function_declaration: function_type • IDENTIFIER COLON type_specifier declaration_list statement_list END_FUNCTION
   59                     | function_type • IDENTIFIER LPAREN parameter_list RPAREN COLON type_specifier declaration_list statement_list END_FUNCTION
   60                     | function_type • IDENTIFIER declaration_list statement_list END_FUNCTION_BLOCK

    IDENTIFIER  shift, and go to state 100


State 53

   12 program_declaration: PROGRAM IDENTIFIER statement_list • END_PROGRAM
   74 statement_list: statement_list • statement

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    END_PROGRAM      shift, and go to state 101
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 54

   73 statement_list: statement •

    $default  reduce using rule 73 (statement_list)


State 55

   75 statement: assignment_statement • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 56

   76 statement: expression_statement • SEMICOLON

    SEMICOLON  shift, and go to state 104


State 57

   77 statement: if_statement •

    $default  reduce using rule 77 (statement)


State 58

   78 statement: case_statement •

    $default  reduce using rule 78 (statement)


State 59

   79 statement: for_statement •

    $default  reduce using rule 79 (statement)


State 60

   80 statement: while_statement •

    $default  reduce using rule 80 (statement)


State 61

   81 statement: repeat_statement •

    $default  reduce using rule 81 (statement)


State 62

   82 statement: return_statement • SEMICOLON

    SEMICOLON  shift, and go to state 105


State 63

   83 statement: exit_statement • SEMICOLON

    SEMICOLON  shift, and go to state 106


State 64

   84 statement: continue_statement • SEMICOLON

    SEMICOLON  shift, and go to state 107


State 65

   85 assignment_statement: primary_expr • ASSIGN expression
  151 array_access: primary_expr • LBRACKET argument_list RBRACKET
  152 member_access: primary_expr • DOT IDENTIFIER

    ASSIGN    shift, and go to state 108
    LBRACKET  shift, and go to state 109
    DOT       shift, and go to state 110


State 66

   86 expression_statement: function_call •
  141 primary_expr: function_call •

    SEMICOLON  reduce using rule 86 (expression_statement)
    $default   reduce using rule 141 (primary_expr)


State 67

  142 primary_expr: array_access •

    $default  reduce using rule 142 (primary_expr)


State 68

  143 primary_expr: member_access •

    $default  reduce using rule 143 (primary_expr)


State 69

   15 library_declaration: LIBRARY IDENTIFIER VERSION • STRING_LITERAL declaration_list END_LIBRARY

    STRING_LITERAL  shift, and go to state 111


State 70

   16 library_declaration: LIBRARY IDENTIFIER declaration_list • END_LIBRARY
   19 declaration_list: declaration_list • declaration

    FUNCTION        shift, and go to state 25
    FUNCTION_BLOCK  shift, and go to state 26
    END_LIBRARY     shift, and go to state 112
    VAR             shift, and go to state 27
    VAR_INPUT       shift, and go to state 28
    VAR_OUTPUT      shift, and go to state 29
    VAR_IN_OUT      shift, and go to state 30
    VAR_EXTERNAL    shift, and go to state 31
    VAR_GLOBAL      shift, and go to state 32
    VAR_TEMP        shift, and go to state 33
    VAR_CONFIG      shift, and go to state 34
    VAR_CONSTANT    shift, and go to state 35
    TYPE            shift, and go to state 44

    declaration           go to state 95
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52


State 71

    9 import_declaration: IMPORT IDENTIFIER FROM • STRING_LITERAL SEMICOLON

    STRING_LITERAL  shift, and go to state 113


State 72

    8 import_declaration: IMPORT IDENTIFIER AS • IDENTIFIER SEMICOLON
   10                   | IMPORT IDENTIFIER AS • IDENTIFIER FROM STRING_LITERAL SEMICOLON

    IDENTIFIER  shift, and go to state 114


State 73

    7 import_declaration: IMPORT IDENTIFIER SEMICOLON •

    $default  reduce using rule 7 (import_declaration)


State 74

  145 function_call: IDENTIFIER LPAREN • RPAREN
  146              | IDENTIFIER LPAREN • argument_list RPAREN

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45
    RPAREN           shift, and go to state 115

    expression           go to state 116
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    argument_list        go to state 117
    array_access         go to state 67
    member_access        go to state 68


State 75

  147 function_call: IDENTIFIER DOT • IDENTIFIER LPAREN RPAREN
  148              | IDENTIFIER DOT • IDENTIFIER LPAREN argument_list RPAREN

    IDENTIFIER  shift, and go to state 118


State 76

  132 unary_expr: PLUS • unary_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    unary_expr     go to state 119
    primary_expr   go to state 85
    function_call  go to state 86
    array_access   go to state 67
    member_access  go to state 68


State 77

  131 unary_expr: MINUS • unary_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    unary_expr     go to state 120
    primary_expr   go to state 85
    function_call  go to state 86
    array_access   go to state 67
    member_access  go to state 68


State 78

  130 unary_expr: NOT • unary_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    unary_expr     go to state 121
    primary_expr   go to state 85
    function_call  go to state 86
    array_access   go to state 67
    member_access  go to state 68


State 79

   87 if_statement: IF expression • THEN statement_list END_IF
   88             | IF expression • THEN statement_list ELSE statement_list END_IF
   89             | IF expression • THEN statement_list elsif_list END_IF
   90             | IF expression • THEN statement_list elsif_list ELSE statement_list END_IF

    THEN  shift, and go to state 122


State 80

  109 expression: logical_expr •
  111 logical_expr: logical_expr • AND comparison_expr
  112             | logical_expr • OR comparison_expr
  113             | logical_expr • XOR comparison_expr

    AND  shift, and go to state 123
    OR   shift, and go to state 124
    XOR  shift, and go to state 125

    $default  reduce using rule 109 (expression)


State 81

  110 logical_expr: comparison_expr •
  115 comparison_expr: comparison_expr • EQ additive_expr
  116                | comparison_expr • NE additive_expr
  117                | comparison_expr • LT additive_expr
  118                | comparison_expr • LE additive_expr
  119                | comparison_expr • GT additive_expr
  120                | comparison_expr • GE additive_expr

    EQ  shift, and go to state 126
    NE  shift, and go to state 127
    LT  shift, and go to state 128
    LE  shift, and go to state 129
    GT  shift, and go to state 130
    GE  shift, and go to state 131

    $default  reduce using rule 110 (logical_expr)


State 82

  114 comparison_expr: additive_expr •
  122 additive_expr: additive_expr • PLUS multiplicative_expr
  123              | additive_expr • MINUS multiplicative_expr

    PLUS   shift, and go to state 132
    MINUS  shift, and go to state 133

    $default  reduce using rule 114 (comparison_expr)


State 83

  121 additive_expr: multiplicative_expr •
  125 multiplicative_expr: multiplicative_expr • MULTIPLY unary_expr
  126                    | multiplicative_expr • DIVIDE unary_expr
  127                    | multiplicative_expr • MOD unary_expr
  128                    | multiplicative_expr • POWER unary_expr

    MULTIPLY  shift, and go to state 134
    DIVIDE    shift, and go to state 135
    MOD       shift, and go to state 136
    POWER     shift, and go to state 137

    $default  reduce using rule 121 (additive_expr)


State 84

  124 multiplicative_expr: unary_expr •

    $default  reduce using rule 124 (multiplicative_expr)


State 85

  129 unary_expr: primary_expr •
  151 array_access: primary_expr • LBRACKET argument_list RBRACKET
  152 member_access: primary_expr • DOT IDENTIFIER

    LBRACKET  shift, and go to state 109
    DOT       shift, and go to state 110

    $default  reduce using rule 129 (unary_expr)


State 86

  141 primary_expr: function_call •

    $default  reduce using rule 141 (primary_expr)


State 87

   94 case_statement: CASE expression • OF case_list END_CASE
   95               | CASE expression • OF case_list ELSE statement_list END_CASE

    OF  shift, and go to state 138


State 88

  101 for_statement: FOR IDENTIFIER • ASSIGN expression TO expression DO statement_list END_FOR
  102              | FOR IDENTIFIER • ASSIGN expression TO expression BY expression DO statement_list END_FOR

    ASSIGN  shift, and go to state 139


State 89

  103 while_statement: WHILE expression • DO statement_list END_WHILE

    DO  shift, and go to state 140


State 90

   74 statement_list: statement_list • statement
  104 repeat_statement: REPEAT statement_list • UNTIL expression END_REPEAT

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    UNTIL            shift, and go to state 141
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 91

  106 return_statement: RETURN expression •

    $default  reduce using rule 106 (return_statement)


State 92

   57 type_declaration: TYPE IDENTIFIER • COLON type_specifier SEMICOLON END_TYPE

    COLON  shift, and go to state 142


State 93

  144 primary_expr: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 143


State 94

   13 program_declaration: PROGRAM IDENTIFIER declaration_list END_PROGRAM •

    $default  reduce using rule 13 (program_declaration)


State 95

   19 declaration_list: declaration_list declaration •

    $default  reduce using rule 19 (declaration_list)


State 96

   11 program_declaration: PROGRAM IDENTIFIER declaration_list statement_list • END_PROGRAM
   74 statement_list: statement_list • statement

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    END_PROGRAM      shift, and go to state 144
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 97

   35 var_item: IDENTIFIER • COLON type_specifier SEMICOLON
   36         | IDENTIFIER • COLON type_specifier ASSIGN expression SEMICOLON
   37         | IDENTIFIER • COLON array_type SEMICOLON

    COLON  shift, and go to state 145


State 98

   23 var_declaration: var_category var_list • END_VAR
   34 var_list: var_list • var_item

    IDENTIFIER  shift, and go to state 97
    END_VAR     shift, and go to state 146

    var_item  go to state 147


State 99

   33 var_list: var_item •

    $default  reduce using rule 33 (var_list)


State 100

   58 function_declaration: function_type IDENTIFIER • COLON type_specifier declaration_list statement_list END_FUNCTION
   59                     | function_type IDENTIFIER • LPAREN parameter_list RPAREN COLON type_specifier declaration_list statement_list END_FUNCTION
   60                     | function_type IDENTIFIER • declaration_list statement_list END_FUNCTION_BLOCK

    FUNCTION        shift, and go to state 25
    FUNCTION_BLOCK  shift, and go to state 26
    VAR             shift, and go to state 27
    VAR_INPUT       shift, and go to state 28
    VAR_OUTPUT      shift, and go to state 29
    VAR_IN_OUT      shift, and go to state 30
    VAR_EXTERNAL    shift, and go to state 31
    VAR_GLOBAL      shift, and go to state 32
    VAR_TEMP        shift, and go to state 33
    VAR_CONFIG      shift, and go to state 34
    VAR_CONSTANT    shift, and go to state 35
    TYPE            shift, and go to state 44
    LPAREN          shift, and go to state 148
    COLON           shift, and go to state 149

    FUNCTION        [reduce using rule 17 (declaration_list)]
    FUNCTION_BLOCK  [reduce using rule 17 (declaration_list)]
    VAR             [reduce using rule 17 (declaration_list)]
    VAR_INPUT       [reduce using rule 17 (declaration_list)]
    VAR_OUTPUT      [reduce using rule 17 (declaration_list)]
    VAR_IN_OUT      [reduce using rule 17 (declaration_list)]
    VAR_EXTERNAL    [reduce using rule 17 (declaration_list)]
    VAR_GLOBAL      [reduce using rule 17 (declaration_list)]
    VAR_TEMP        [reduce using rule 17 (declaration_list)]
    VAR_CONFIG      [reduce using rule 17 (declaration_list)]
    VAR_CONSTANT    [reduce using rule 17 (declaration_list)]
    TYPE            [reduce using rule 17 (declaration_list)]
    LPAREN          [reduce using rule 17 (declaration_list)]
    $default        reduce using rule 17 (declaration_list)

    declaration_list      go to state 150
    declaration           go to state 47
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52


State 101

   12 program_declaration: PROGRAM IDENTIFIER statement_list END_PROGRAM •

    $default  reduce using rule 12 (program_declaration)


State 102

   74 statement_list: statement_list statement •

    $default  reduce using rule 74 (statement_list)


State 103

   75 statement: assignment_statement SEMICOLON •

    $default  reduce using rule 75 (statement)


State 104

   76 statement: expression_statement SEMICOLON •

    $default  reduce using rule 76 (statement)


State 105

   82 statement: return_statement SEMICOLON •

    $default  reduce using rule 82 (statement)


State 106

   83 statement: exit_statement SEMICOLON •

    $default  reduce using rule 83 (statement)


State 107

   84 statement: continue_statement SEMICOLON •

    $default  reduce using rule 84 (statement)


State 108

   85 assignment_statement: primary_expr ASSIGN • expression

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 151
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 109

  151 array_access: primary_expr LBRACKET • argument_list RBRACKET

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 116
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    argument_list        go to state 152
    array_access         go to state 67
    member_access        go to state 68


State 110

  152 member_access: primary_expr DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 111

   15 library_declaration: LIBRARY IDENTIFIER VERSION STRING_LITERAL • declaration_list END_LIBRARY

    FUNCTION        shift, and go to state 25
    FUNCTION_BLOCK  shift, and go to state 26
    VAR             shift, and go to state 27
    VAR_INPUT       shift, and go to state 28
    VAR_OUTPUT      shift, and go to state 29
    VAR_IN_OUT      shift, and go to state 30
    VAR_EXTERNAL    shift, and go to state 31
    VAR_GLOBAL      shift, and go to state 32
    VAR_TEMP        shift, and go to state 33
    VAR_CONFIG      shift, and go to state 34
    VAR_CONSTANT    shift, and go to state 35
    TYPE            shift, and go to state 44

    FUNCTION        [reduce using rule 17 (declaration_list)]
    FUNCTION_BLOCK  [reduce using rule 17 (declaration_list)]
    VAR             [reduce using rule 17 (declaration_list)]
    VAR_INPUT       [reduce using rule 17 (declaration_list)]
    VAR_OUTPUT      [reduce using rule 17 (declaration_list)]
    VAR_IN_OUT      [reduce using rule 17 (declaration_list)]
    VAR_EXTERNAL    [reduce using rule 17 (declaration_list)]
    VAR_GLOBAL      [reduce using rule 17 (declaration_list)]
    VAR_TEMP        [reduce using rule 17 (declaration_list)]
    VAR_CONFIG      [reduce using rule 17 (declaration_list)]
    VAR_CONSTANT    [reduce using rule 17 (declaration_list)]
    TYPE            [reduce using rule 17 (declaration_list)]
    $default        reduce using rule 17 (declaration_list)

    declaration_list      go to state 154
    declaration           go to state 47
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52


State 112

   16 library_declaration: LIBRARY IDENTIFIER declaration_list END_LIBRARY •

    $default  reduce using rule 16 (library_declaration)


State 113

    9 import_declaration: IMPORT IDENTIFIER FROM STRING_LITERAL • SEMICOLON

    SEMICOLON  shift, and go to state 155


State 114

    8 import_declaration: IMPORT IDENTIFIER AS IDENTIFIER • SEMICOLON
   10                   | IMPORT IDENTIFIER AS IDENTIFIER • FROM STRING_LITERAL SEMICOLON

    FROM       shift, and go to state 156
    SEMICOLON  shift, and go to state 157


State 115

  145 function_call: IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 145 (function_call)


State 116

  149 argument_list: expression •

    $default  reduce using rule 149 (argument_list)


State 117

  146 function_call: IDENTIFIER LPAREN argument_list • RPAREN
  150 argument_list: argument_list • COMMA expression

    RPAREN  shift, and go to state 158
    COMMA   shift, and go to state 159


State 118

  147 function_call: IDENTIFIER DOT IDENTIFIER • LPAREN RPAREN
  148              | IDENTIFIER DOT IDENTIFIER • LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 160


State 119

  132 unary_expr: PLUS unary_expr •

    $default  reduce using rule 132 (unary_expr)


State 120

  131 unary_expr: MINUS unary_expr •

    $default  reduce using rule 131 (unary_expr)


State 121

  130 unary_expr: NOT unary_expr •

    $default  reduce using rule 130 (unary_expr)


State 122

   87 if_statement: IF expression THEN • statement_list END_IF
   88             | IF expression THEN • statement_list ELSE statement_list END_IF
   89             | IF expression THEN • statement_list elsif_list END_IF
   90             | IF expression THEN • statement_list elsif_list ELSE statement_list END_IF

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 161
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 123

  111 logical_expr: logical_expr AND • comparison_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    comparison_expr      go to state 162
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 124

  112 logical_expr: logical_expr OR • comparison_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    comparison_expr      go to state 163
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 125

  113 logical_expr: logical_expr XOR • comparison_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    comparison_expr      go to state 164
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 126

  115 comparison_expr: comparison_expr EQ • additive_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    additive_expr        go to state 165
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 127

  116 comparison_expr: comparison_expr NE • additive_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    additive_expr        go to state 166
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 128

  117 comparison_expr: comparison_expr LT • additive_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    additive_expr        go to state 167
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 129

  118 comparison_expr: comparison_expr LE • additive_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    additive_expr        go to state 168
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 130

  119 comparison_expr: comparison_expr GT • additive_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    additive_expr        go to state 169
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 131

  120 comparison_expr: comparison_expr GE • additive_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    additive_expr        go to state 170
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 132

  122 additive_expr: additive_expr PLUS • multiplicative_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    multiplicative_expr  go to state 171
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 133

  123 additive_expr: additive_expr MINUS • multiplicative_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    multiplicative_expr  go to state 172
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 134

  125 multiplicative_expr: multiplicative_expr MULTIPLY • unary_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    unary_expr     go to state 173
    primary_expr   go to state 85
    function_call  go to state 86
    array_access   go to state 67
    member_access  go to state 68


State 135

  126 multiplicative_expr: multiplicative_expr DIVIDE • unary_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    unary_expr     go to state 174
    primary_expr   go to state 85
    function_call  go to state 86
    array_access   go to state 67
    member_access  go to state 68


State 136

  127 multiplicative_expr: multiplicative_expr MOD • unary_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    unary_expr     go to state 175
    primary_expr   go to state 85
    function_call  go to state 86
    array_access   go to state 67
    member_access  go to state 68


State 137

  128 multiplicative_expr: multiplicative_expr POWER • unary_expr

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    unary_expr     go to state 176
    primary_expr   go to state 85
    function_call  go to state 86
    array_access   go to state 67
    member_access  go to state 68


State 138

   94 case_statement: CASE expression OF • case_list END_CASE
   95               | CASE expression OF • case_list ELSE statement_list END_CASE

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    case_list            go to state 177
    case_item            go to state 178
    case_values          go to state 179
    expression           go to state 180
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 139

  101 for_statement: FOR IDENTIFIER ASSIGN • expression TO expression DO statement_list END_FOR
  102              | FOR IDENTIFIER ASSIGN • expression TO expression BY expression DO statement_list END_FOR

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 181
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 140

  103 while_statement: WHILE expression DO • statement_list END_WHILE

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 182
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 141

  104 repeat_statement: REPEAT statement_list UNTIL • expression END_REPEAT

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 183
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 142

   57 type_declaration: TYPE IDENTIFIER COLON • type_specifier SEMICOLON END_TYPE

    IDENTIFIER   shift, and go to state 184
    TYPE_BOOL    shift, and go to state 185
    TYPE_BYTE    shift, and go to state 186
    TYPE_INT     shift, and go to state 187
    TYPE_DINT    shift, and go to state 188
    TYPE_REAL    shift, and go to state 189
    TYPE_LREAL   shift, and go to state 190
    TYPE_STRING  shift, and go to state 191
    TYPE_TIME    shift, and go to state 192
    TYPE_ARRAY   shift, and go to state 193
    TYPE_STRUCT  shift, and go to state 194

    type_specifier  go to state 195
    basic_type      go to state 196
    array_type      go to state 197
    struct_type     go to state 198


State 143

  144 primary_expr: LPAREN expression RPAREN •

    $default  reduce using rule 144 (primary_expr)


State 144

   11 program_declaration: PROGRAM IDENTIFIER declaration_list statement_list END_PROGRAM •

    $default  reduce using rule 11 (program_declaration)


State 145

   35 var_item: IDENTIFIER COLON • type_specifier SEMICOLON
   36         | IDENTIFIER COLON • type_specifier ASSIGN expression SEMICOLON
   37         | IDENTIFIER COLON • array_type SEMICOLON

    IDENTIFIER   shift, and go to state 184
    TYPE_BOOL    shift, and go to state 185
    TYPE_BYTE    shift, and go to state 186
    TYPE_INT     shift, and go to state 187
    TYPE_DINT    shift, and go to state 188
    TYPE_REAL    shift, and go to state 189
    TYPE_LREAL   shift, and go to state 190
    TYPE_STRING  shift, and go to state 191
    TYPE_TIME    shift, and go to state 192
    TYPE_ARRAY   shift, and go to state 193
    TYPE_STRUCT  shift, and go to state 194

    type_specifier  go to state 199
    basic_type      go to state 196
    array_type      go to state 200
    struct_type     go to state 198


State 146

   23 var_declaration: var_category var_list END_VAR •

    $default  reduce using rule 23 (var_declaration)


State 147

   34 var_list: var_list var_item •

    $default  reduce using rule 34 (var_list)


State 148

   59 function_declaration: function_type IDENTIFIER LPAREN • parameter_list RPAREN COLON type_specifier declaration_list statement_list END_FUNCTION

    VAR_INPUT   shift, and go to state 201
    VAR_OUTPUT  shift, and go to state 202
    VAR_IN_OUT  shift, and go to state 203

    IDENTIFIER  reduce using rule 68 (parameter_category)
    $default    reduce using rule 63 (parameter_list)

    parameter_list         go to state 204
    parameter_declaration  go to state 205
    parameter_category     go to state 206


State 149

   58 function_declaration: function_type IDENTIFIER COLON • type_specifier declaration_list statement_list END_FUNCTION

    IDENTIFIER   shift, and go to state 184
    TYPE_BOOL    shift, and go to state 185
    TYPE_BYTE    shift, and go to state 186
    TYPE_INT     shift, and go to state 187
    TYPE_DINT    shift, and go to state 188
    TYPE_REAL    shift, and go to state 189
    TYPE_LREAL   shift, and go to state 190
    TYPE_STRING  shift, and go to state 191
    TYPE_TIME    shift, and go to state 192
    TYPE_ARRAY   shift, and go to state 193
    TYPE_STRUCT  shift, and go to state 194

    type_specifier  go to state 207
    basic_type      go to state 196
    array_type      go to state 197
    struct_type     go to state 198


State 150

   19 declaration_list: declaration_list • declaration
   60 function_declaration: function_type IDENTIFIER declaration_list • statement_list END_FUNCTION_BLOCK

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    FUNCTION         shift, and go to state 25
    FUNCTION_BLOCK   shift, and go to state 26
    VAR              shift, and go to state 27
    VAR_INPUT        shift, and go to state 28
    VAR_OUTPUT       shift, and go to state 29
    VAR_IN_OUT       shift, and go to state 30
    VAR_EXTERNAL     shift, and go to state 31
    VAR_GLOBAL       shift, and go to state 32
    VAR_TEMP         shift, and go to state 33
    VAR_CONFIG       shift, and go to state 34
    VAR_CONSTANT     shift, and go to state 35
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    TYPE             shift, and go to state 44
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    declaration           go to state 95
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52
    statement_list        go to state 208
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 151

   85 assignment_statement: primary_expr ASSIGN expression •

    $default  reduce using rule 85 (assignment_statement)


State 152

  150 argument_list: argument_list • COMMA expression
  151 array_access: primary_expr LBRACKET argument_list • RBRACKET

    RBRACKET  shift, and go to state 209
    COMMA     shift, and go to state 159


State 153

  152 member_access: primary_expr DOT IDENTIFIER •

    $default  reduce using rule 152 (member_access)


State 154

   15 library_declaration: LIBRARY IDENTIFIER VERSION STRING_LITERAL declaration_list • END_LIBRARY
   19 declaration_list: declaration_list • declaration

    FUNCTION        shift, and go to state 25
    FUNCTION_BLOCK  shift, and go to state 26
    END_LIBRARY     shift, and go to state 210
    VAR             shift, and go to state 27
    VAR_INPUT       shift, and go to state 28
    VAR_OUTPUT      shift, and go to state 29
    VAR_IN_OUT      shift, and go to state 30
    VAR_EXTERNAL    shift, and go to state 31
    VAR_GLOBAL      shift, and go to state 32
    VAR_TEMP        shift, and go to state 33
    VAR_CONFIG      shift, and go to state 34
    VAR_CONSTANT    shift, and go to state 35
    TYPE            shift, and go to state 44

    declaration           go to state 95
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52


State 155

    9 import_declaration: IMPORT IDENTIFIER FROM STRING_LITERAL SEMICOLON •

    $default  reduce using rule 9 (import_declaration)


State 156

   10 import_declaration: IMPORT IDENTIFIER AS IDENTIFIER FROM • STRING_LITERAL SEMICOLON

    STRING_LITERAL  shift, and go to state 211


State 157

    8 import_declaration: IMPORT IDENTIFIER AS IDENTIFIER SEMICOLON •

    $default  reduce using rule 8 (import_declaration)


State 158

  146 function_call: IDENTIFIER LPAREN argument_list RPAREN •

    $default  reduce using rule 146 (function_call)


State 159

  150 argument_list: argument_list COMMA • expression

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 212
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 160

  147 function_call: IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN
  148              | IDENTIFIER DOT IDENTIFIER LPAREN • argument_list RPAREN

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45
    RPAREN           shift, and go to state 213

    expression           go to state 116
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    argument_list        go to state 214
    array_access         go to state 67
    member_access        go to state 68


State 161

   74 statement_list: statement_list • statement
   87 if_statement: IF expression THEN statement_list • END_IF
   88             | IF expression THEN statement_list • ELSE statement_list END_IF
   89             | IF expression THEN statement_list • elsif_list END_IF
   90             | IF expression THEN statement_list • elsif_list ELSE statement_list END_IF

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    ELSE             shift, and go to state 215
    ELSIF            shift, and go to state 216
    END_IF           shift, and go to state 217
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    elsif_list            go to state 218
    elsif_statement       go to state 219
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 162

  111 logical_expr: logical_expr AND comparison_expr •
  115 comparison_expr: comparison_expr • EQ additive_expr
  116                | comparison_expr • NE additive_expr
  117                | comparison_expr • LT additive_expr
  118                | comparison_expr • LE additive_expr
  119                | comparison_expr • GT additive_expr
  120                | comparison_expr • GE additive_expr

    EQ  shift, and go to state 126
    NE  shift, and go to state 127
    LT  shift, and go to state 128
    LE  shift, and go to state 129
    GT  shift, and go to state 130
    GE  shift, and go to state 131

    $default  reduce using rule 111 (logical_expr)


State 163

  112 logical_expr: logical_expr OR comparison_expr •
  115 comparison_expr: comparison_expr • EQ additive_expr
  116                | comparison_expr • NE additive_expr
  117                | comparison_expr • LT additive_expr
  118                | comparison_expr • LE additive_expr
  119                | comparison_expr • GT additive_expr
  120                | comparison_expr • GE additive_expr

    EQ  shift, and go to state 126
    NE  shift, and go to state 127
    LT  shift, and go to state 128
    LE  shift, and go to state 129
    GT  shift, and go to state 130
    GE  shift, and go to state 131

    $default  reduce using rule 112 (logical_expr)


State 164

  113 logical_expr: logical_expr XOR comparison_expr •
  115 comparison_expr: comparison_expr • EQ additive_expr
  116                | comparison_expr • NE additive_expr
  117                | comparison_expr • LT additive_expr
  118                | comparison_expr • LE additive_expr
  119                | comparison_expr • GT additive_expr
  120                | comparison_expr • GE additive_expr

    EQ  shift, and go to state 126
    NE  shift, and go to state 127
    LT  shift, and go to state 128
    LE  shift, and go to state 129
    GT  shift, and go to state 130
    GE  shift, and go to state 131

    $default  reduce using rule 113 (logical_expr)


State 165

  115 comparison_expr: comparison_expr EQ additive_expr •
  122 additive_expr: additive_expr • PLUS multiplicative_expr
  123              | additive_expr • MINUS multiplicative_expr

    PLUS   shift, and go to state 132
    MINUS  shift, and go to state 133

    $default  reduce using rule 115 (comparison_expr)


State 166

  116 comparison_expr: comparison_expr NE additive_expr •
  122 additive_expr: additive_expr • PLUS multiplicative_expr
  123              | additive_expr • MINUS multiplicative_expr

    PLUS   shift, and go to state 132
    MINUS  shift, and go to state 133

    $default  reduce using rule 116 (comparison_expr)


State 167

  117 comparison_expr: comparison_expr LT additive_expr •
  122 additive_expr: additive_expr • PLUS multiplicative_expr
  123              | additive_expr • MINUS multiplicative_expr

    PLUS   shift, and go to state 132
    MINUS  shift, and go to state 133

    $default  reduce using rule 117 (comparison_expr)


State 168

  118 comparison_expr: comparison_expr LE additive_expr •
  122 additive_expr: additive_expr • PLUS multiplicative_expr
  123              | additive_expr • MINUS multiplicative_expr

    PLUS   shift, and go to state 132
    MINUS  shift, and go to state 133

    $default  reduce using rule 118 (comparison_expr)


State 169

  119 comparison_expr: comparison_expr GT additive_expr •
  122 additive_expr: additive_expr • PLUS multiplicative_expr
  123              | additive_expr • MINUS multiplicative_expr

    PLUS   shift, and go to state 132
    MINUS  shift, and go to state 133

    $default  reduce using rule 119 (comparison_expr)


State 170

  120 comparison_expr: comparison_expr GE additive_expr •
  122 additive_expr: additive_expr • PLUS multiplicative_expr
  123              | additive_expr • MINUS multiplicative_expr

    PLUS   shift, and go to state 132
    MINUS  shift, and go to state 133

    $default  reduce using rule 120 (comparison_expr)


State 171

  122 additive_expr: additive_expr PLUS multiplicative_expr •
  125 multiplicative_expr: multiplicative_expr • MULTIPLY unary_expr
  126                    | multiplicative_expr • DIVIDE unary_expr
  127                    | multiplicative_expr • MOD unary_expr
  128                    | multiplicative_expr • POWER unary_expr

    MULTIPLY  shift, and go to state 134
    DIVIDE    shift, and go to state 135
    MOD       shift, and go to state 136
    POWER     shift, and go to state 137

    $default  reduce using rule 122 (additive_expr)


State 172

  123 additive_expr: additive_expr MINUS multiplicative_expr •
  125 multiplicative_expr: multiplicative_expr • MULTIPLY unary_expr
  126                    | multiplicative_expr • DIVIDE unary_expr
  127                    | multiplicative_expr • MOD unary_expr
  128                    | multiplicative_expr • POWER unary_expr

    MULTIPLY  shift, and go to state 134
    DIVIDE    shift, and go to state 135
    MOD       shift, and go to state 136
    POWER     shift, and go to state 137

    $default  reduce using rule 123 (additive_expr)


State 173

  125 multiplicative_expr: multiplicative_expr MULTIPLY unary_expr •

    $default  reduce using rule 125 (multiplicative_expr)


State 174

  126 multiplicative_expr: multiplicative_expr DIVIDE unary_expr •

    $default  reduce using rule 126 (multiplicative_expr)


State 175

  127 multiplicative_expr: multiplicative_expr MOD unary_expr •

    $default  reduce using rule 127 (multiplicative_expr)


State 176

  128 multiplicative_expr: multiplicative_expr POWER unary_expr •

    $default  reduce using rule 128 (multiplicative_expr)


State 177

   94 case_statement: CASE expression OF case_list • END_CASE
   95               | CASE expression OF case_list • ELSE statement_list END_CASE
   97 case_list: case_list • case_item

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    ELSE             shift, and go to state 220
    END_CASE         shift, and go to state 221
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    case_item            go to state 222
    case_values          go to state 179
    expression           go to state 180
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 178

   96 case_list: case_item •

    $default  reduce using rule 96 (case_list)


State 179

   98 case_item: case_values • COLON statement_list
  100 case_values: case_values • COMMA expression

    COLON  shift, and go to state 223
    COMMA  shift, and go to state 224


State 180

   99 case_values: expression •

    $default  reduce using rule 99 (case_values)


State 181

  101 for_statement: FOR IDENTIFIER ASSIGN expression • TO expression DO statement_list END_FOR
  102              | FOR IDENTIFIER ASSIGN expression • TO expression BY expression DO statement_list END_FOR

    TO  shift, and go to state 225


State 182

   74 statement_list: statement_list • statement
  103 while_statement: WHILE expression DO statement_list • END_WHILE

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    END_WHILE        shift, and go to state 226
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 183

  104 repeat_statement: REPEAT statement_list UNTIL expression • END_REPEAT

    END_REPEAT  shift, and go to state 227


State 184

   41 type_specifier: IDENTIFIER •

    $default  reduce using rule 41 (type_specifier)


State 185

   42 basic_type: TYPE_BOOL •

    $default  reduce using rule 42 (basic_type)


State 186

   43 basic_type: TYPE_BYTE •

    $default  reduce using rule 43 (basic_type)


State 187

   44 basic_type: TYPE_INT •

    $default  reduce using rule 44 (basic_type)


State 188

   45 basic_type: TYPE_DINT •

    $default  reduce using rule 45 (basic_type)


State 189

   46 basic_type: TYPE_REAL •

    $default  reduce using rule 46 (basic_type)


State 190

   47 basic_type: TYPE_LREAL •

    $default  reduce using rule 47 (basic_type)


State 191

   48 basic_type: TYPE_STRING •

    $default  reduce using rule 48 (basic_type)


State 192

   49 basic_type: TYPE_TIME •

    $default  reduce using rule 49 (basic_type)


State 193

   50 array_type: TYPE_ARRAY • LBRACKET array_bounds RBRACKET OF type_specifier

    LBRACKET  shift, and go to state 228


State 194

   54 struct_type: TYPE_STRUCT • struct_members END_STRUCT

    IDENTIFIER  shift, and go to state 97

    var_item        go to state 229
    struct_members  go to state 230


State 195

   57 type_declaration: TYPE IDENTIFIER COLON type_specifier • SEMICOLON END_TYPE

    SEMICOLON  shift, and go to state 231


State 196

   38 type_specifier: basic_type •

    $default  reduce using rule 38 (type_specifier)


State 197

   39 type_specifier: array_type •

    $default  reduce using rule 39 (type_specifier)


State 198

   40 type_specifier: struct_type •

    $default  reduce using rule 40 (type_specifier)


State 199

   35 var_item: IDENTIFIER COLON type_specifier • SEMICOLON
   36         | IDENTIFIER COLON type_specifier • ASSIGN expression SEMICOLON

    ASSIGN     shift, and go to state 232
    SEMICOLON  shift, and go to state 233


State 200

   37 var_item: IDENTIFIER COLON array_type • SEMICOLON
   39 type_specifier: array_type •

    SEMICOLON  shift, and go to state 234

    SEMICOLON  [reduce using rule 39 (type_specifier)]
    $default   reduce using rule 39 (type_specifier)


State 201

   69 parameter_category: VAR_INPUT •

    $default  reduce using rule 69 (parameter_category)


State 202

   70 parameter_category: VAR_OUTPUT •

    $default  reduce using rule 70 (parameter_category)


State 203

   71 parameter_category: VAR_IN_OUT •

    $default  reduce using rule 71 (parameter_category)


State 204

   59 function_declaration: function_type IDENTIFIER LPAREN parameter_list • RPAREN COLON type_specifier declaration_list statement_list END_FUNCTION
   65 parameter_list: parameter_list • SEMICOLON parameter_declaration

    RPAREN     shift, and go to state 235
    SEMICOLON  shift, and go to state 236


State 205

   64 parameter_list: parameter_declaration •

    $default  reduce using rule 64 (parameter_list)


State 206

   66 parameter_declaration: parameter_category • IDENTIFIER COLON type_specifier
   67                      | parameter_category • IDENTIFIER COLON type_specifier ASSIGN expression

    IDENTIFIER  shift, and go to state 237


State 207

   58 function_declaration: function_type IDENTIFIER COLON type_specifier • declaration_list statement_list END_FUNCTION

    FUNCTION        shift, and go to state 25
    FUNCTION_BLOCK  shift, and go to state 26
    VAR             shift, and go to state 27
    VAR_INPUT       shift, and go to state 28
    VAR_OUTPUT      shift, and go to state 29
    VAR_IN_OUT      shift, and go to state 30
    VAR_EXTERNAL    shift, and go to state 31
    VAR_GLOBAL      shift, and go to state 32
    VAR_TEMP        shift, and go to state 33
    VAR_CONFIG      shift, and go to state 34
    VAR_CONSTANT    shift, and go to state 35
    TYPE            shift, and go to state 44

    FUNCTION        [reduce using rule 17 (declaration_list)]
    FUNCTION_BLOCK  [reduce using rule 17 (declaration_list)]
    VAR             [reduce using rule 17 (declaration_list)]
    VAR_INPUT       [reduce using rule 17 (declaration_list)]
    VAR_OUTPUT      [reduce using rule 17 (declaration_list)]
    VAR_IN_OUT      [reduce using rule 17 (declaration_list)]
    VAR_EXTERNAL    [reduce using rule 17 (declaration_list)]
    VAR_GLOBAL      [reduce using rule 17 (declaration_list)]
    VAR_TEMP        [reduce using rule 17 (declaration_list)]
    VAR_CONFIG      [reduce using rule 17 (declaration_list)]
    VAR_CONSTANT    [reduce using rule 17 (declaration_list)]
    TYPE            [reduce using rule 17 (declaration_list)]
    $default        reduce using rule 17 (declaration_list)

    declaration_list      go to state 238
    declaration           go to state 47
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52


State 208

   60 function_declaration: function_type IDENTIFIER declaration_list statement_list • END_FUNCTION_BLOCK
   74 statement_list: statement_list • statement

    INTEGER_LITERAL     shift, and go to state 16
    REAL_LITERAL        shift, and go to state 17
    BOOL_LITERAL        shift, and go to state 18
    STRING_LITERAL      shift, and go to state 19
    WSTRING_LITERAL     shift, and go to state 20
    TIME_LITERAL        shift, and go to state 21
    DATE_LITERAL        shift, and go to state 22
    IDENTIFIER          shift, and go to state 23
    END_FUNCTION_BLOCK  shift, and go to state 239
    IF                  shift, and go to state 36
    CASE                shift, and go to state 37
    FOR                 shift, and go to state 38
    WHILE               shift, and go to state 39
    REPEAT              shift, and go to state 40
    EXIT                shift, and go to state 41
    CONTINUE            shift, and go to state 42
    RETURN              shift, and go to state 43
    LPAREN              shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 209

  151 array_access: primary_expr LBRACKET argument_list RBRACKET •

    $default  reduce using rule 151 (array_access)


State 210

   15 library_declaration: LIBRARY IDENTIFIER VERSION STRING_LITERAL declaration_list END_LIBRARY •

    $default  reduce using rule 15 (library_declaration)


State 211

   10 import_declaration: IMPORT IDENTIFIER AS IDENTIFIER FROM STRING_LITERAL • SEMICOLON

    SEMICOLON  shift, and go to state 240


State 212

  150 argument_list: argument_list COMMA expression •

    $default  reduce using rule 150 (argument_list)


State 213

  147 function_call: IDENTIFIER DOT IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 147 (function_call)


State 214

  148 function_call: IDENTIFIER DOT IDENTIFIER LPAREN argument_list • RPAREN
  150 argument_list: argument_list • COMMA expression

    RPAREN  shift, and go to state 241
    COMMA   shift, and go to state 159


State 215

   88 if_statement: IF expression THEN statement_list ELSE • statement_list END_IF

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 242
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 216

   93 elsif_statement: ELSIF • expression THEN statement_list

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 243
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 217

   87 if_statement: IF expression THEN statement_list END_IF •

    $default  reduce using rule 87 (if_statement)


State 218

   89 if_statement: IF expression THEN statement_list elsif_list • END_IF
   90             | IF expression THEN statement_list elsif_list • ELSE statement_list END_IF
   92 elsif_list: elsif_list • elsif_statement

    ELSE    shift, and go to state 244
    ELSIF   shift, and go to state 216
    END_IF  shift, and go to state 245

    elsif_statement  go to state 246


State 219

   91 elsif_list: elsif_statement •

    $default  reduce using rule 91 (elsif_list)


State 220

   95 case_statement: CASE expression OF case_list ELSE • statement_list END_CASE

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 247
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 221

   94 case_statement: CASE expression OF case_list END_CASE •

    $default  reduce using rule 94 (case_statement)


State 222

   97 case_list: case_list case_item •

    $default  reduce using rule 97 (case_list)


State 223

   98 case_item: case_values COLON • statement_list

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 248
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 224

  100 case_values: case_values COMMA • expression

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 249
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 225

  101 for_statement: FOR IDENTIFIER ASSIGN expression TO • expression DO statement_list END_FOR
  102              | FOR IDENTIFIER ASSIGN expression TO • expression BY expression DO statement_list END_FOR

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 250
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 226

  103 while_statement: WHILE expression DO statement_list END_WHILE •

    $default  reduce using rule 103 (while_statement)


State 227

  104 repeat_statement: REPEAT statement_list UNTIL expression END_REPEAT •

    $default  reduce using rule 104 (repeat_statement)


State 228

   50 array_type: TYPE_ARRAY LBRACKET • array_bounds RBRACKET OF type_specifier

    INTEGER_LITERAL  shift, and go to state 251

    array_bounds         go to state 252
    bound_specification  go to state 253


State 229

   55 struct_members: var_item •

    $default  reduce using rule 55 (struct_members)


State 230

   54 struct_type: TYPE_STRUCT struct_members • END_STRUCT
   56 struct_members: struct_members • var_item

    IDENTIFIER  shift, and go to state 97
    END_STRUCT  shift, and go to state 254

    var_item  go to state 255


State 231

   57 type_declaration: TYPE IDENTIFIER COLON type_specifier SEMICOLON • END_TYPE

    END_TYPE  shift, and go to state 256


State 232

   36 var_item: IDENTIFIER COLON type_specifier ASSIGN • expression SEMICOLON

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 257
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 233

   35 var_item: IDENTIFIER COLON type_specifier SEMICOLON •

    $default  reduce using rule 35 (var_item)


State 234

   37 var_item: IDENTIFIER COLON array_type SEMICOLON •

    $default  reduce using rule 37 (var_item)


State 235

   59 function_declaration: function_type IDENTIFIER LPAREN parameter_list RPAREN • COLON type_specifier declaration_list statement_list END_FUNCTION

    COLON  shift, and go to state 258


State 236

   65 parameter_list: parameter_list SEMICOLON • parameter_declaration

    VAR_INPUT   shift, and go to state 201
    VAR_OUTPUT  shift, and go to state 202
    VAR_IN_OUT  shift, and go to state 203

    $default  reduce using rule 68 (parameter_category)

    parameter_declaration  go to state 259
    parameter_category     go to state 206


State 237

   66 parameter_declaration: parameter_category IDENTIFIER • COLON type_specifier
   67                      | parameter_category IDENTIFIER • COLON type_specifier ASSIGN expression

    COLON  shift, and go to state 260


State 238

   19 declaration_list: declaration_list • declaration
   58 function_declaration: function_type IDENTIFIER COLON type_specifier declaration_list • statement_list END_FUNCTION

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    FUNCTION         shift, and go to state 25
    FUNCTION_BLOCK   shift, and go to state 26
    VAR              shift, and go to state 27
    VAR_INPUT        shift, and go to state 28
    VAR_OUTPUT       shift, and go to state 29
    VAR_IN_OUT       shift, and go to state 30
    VAR_EXTERNAL     shift, and go to state 31
    VAR_GLOBAL       shift, and go to state 32
    VAR_TEMP         shift, and go to state 33
    VAR_CONFIG       shift, and go to state 34
    VAR_CONSTANT     shift, and go to state 35
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    TYPE             shift, and go to state 44
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    declaration           go to state 95
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52
    statement_list        go to state 261
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 239

   60 function_declaration: function_type IDENTIFIER declaration_list statement_list END_FUNCTION_BLOCK •

    $default  reduce using rule 60 (function_declaration)


State 240

   10 import_declaration: IMPORT IDENTIFIER AS IDENTIFIER FROM STRING_LITERAL SEMICOLON •

    $default  reduce using rule 10 (import_declaration)


State 241

  148 function_call: IDENTIFIER DOT IDENTIFIER LPAREN argument_list RPAREN •

    $default  reduce using rule 148 (function_call)


State 242

   74 statement_list: statement_list • statement
   88 if_statement: IF expression THEN statement_list ELSE statement_list • END_IF

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    END_IF           shift, and go to state 262
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 243

   93 elsif_statement: ELSIF expression • THEN statement_list

    THEN  shift, and go to state 263


State 244

   90 if_statement: IF expression THEN statement_list elsif_list ELSE • statement_list END_IF

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 264
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 245

   89 if_statement: IF expression THEN statement_list elsif_list END_IF •

    $default  reduce using rule 89 (if_statement)


State 246

   92 elsif_list: elsif_list elsif_statement •

    $default  reduce using rule 92 (elsif_list)


State 247

   74 statement_list: statement_list • statement
   95 case_statement: CASE expression OF case_list ELSE statement_list • END_CASE

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    END_CASE         shift, and go to state 265
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 248

   74 statement_list: statement_list • statement
   98 case_item: case_values COLON statement_list •

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 98 (case_item)]
    REAL_LITERAL     [reduce using rule 98 (case_item)]
    BOOL_LITERAL     [reduce using rule 98 (case_item)]
    STRING_LITERAL   [reduce using rule 98 (case_item)]
    WSTRING_LITERAL  [reduce using rule 98 (case_item)]
    TIME_LITERAL     [reduce using rule 98 (case_item)]
    DATE_LITERAL     [reduce using rule 98 (case_item)]
    IDENTIFIER       [reduce using rule 98 (case_item)]
    LPAREN           [reduce using rule 98 (case_item)]
    $default         reduce using rule 98 (case_item)

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 249

  100 case_values: case_values COMMA expression •

    $default  reduce using rule 100 (case_values)


State 250

  101 for_statement: FOR IDENTIFIER ASSIGN expression TO expression • DO statement_list END_FOR
  102              | FOR IDENTIFIER ASSIGN expression TO expression • BY expression DO statement_list END_FOR

    BY  shift, and go to state 266
    DO  shift, and go to state 267


State 251

   53 bound_specification: INTEGER_LITERAL • RANGE INTEGER_LITERAL

    RANGE  shift, and go to state 268


State 252

   50 array_type: TYPE_ARRAY LBRACKET array_bounds • RBRACKET OF type_specifier
   52 array_bounds: array_bounds • COMMA bound_specification

    RBRACKET  shift, and go to state 269
    COMMA     shift, and go to state 270


State 253

   51 array_bounds: bound_specification •

    $default  reduce using rule 51 (array_bounds)


State 254

   54 struct_type: TYPE_STRUCT struct_members END_STRUCT •

    $default  reduce using rule 54 (struct_type)


State 255

   56 struct_members: struct_members var_item •

    $default  reduce using rule 56 (struct_members)


State 256

   57 type_declaration: TYPE IDENTIFIER COLON type_specifier SEMICOLON END_TYPE •

    $default  reduce using rule 57 (type_declaration)


State 257

   36 var_item: IDENTIFIER COLON type_specifier ASSIGN expression • SEMICOLON

    SEMICOLON  shift, and go to state 271


State 258

   59 function_declaration: function_type IDENTIFIER LPAREN parameter_list RPAREN COLON • type_specifier declaration_list statement_list END_FUNCTION

    IDENTIFIER   shift, and go to state 184
    TYPE_BOOL    shift, and go to state 185
    TYPE_BYTE    shift, and go to state 186
    TYPE_INT     shift, and go to state 187
    TYPE_DINT    shift, and go to state 188
    TYPE_REAL    shift, and go to state 189
    TYPE_LREAL   shift, and go to state 190
    TYPE_STRING  shift, and go to state 191
    TYPE_TIME    shift, and go to state 192
    TYPE_ARRAY   shift, and go to state 193
    TYPE_STRUCT  shift, and go to state 194

    type_specifier  go to state 272
    basic_type      go to state 196
    array_type      go to state 197
    struct_type     go to state 198


State 259

   65 parameter_list: parameter_list SEMICOLON parameter_declaration •

    $default  reduce using rule 65 (parameter_list)


State 260

   66 parameter_declaration: parameter_category IDENTIFIER COLON • type_specifier
   67                      | parameter_category IDENTIFIER COLON • type_specifier ASSIGN expression

    IDENTIFIER   shift, and go to state 184
    TYPE_BOOL    shift, and go to state 185
    TYPE_BYTE    shift, and go to state 186
    TYPE_INT     shift, and go to state 187
    TYPE_DINT    shift, and go to state 188
    TYPE_REAL    shift, and go to state 189
    TYPE_LREAL   shift, and go to state 190
    TYPE_STRING  shift, and go to state 191
    TYPE_TIME    shift, and go to state 192
    TYPE_ARRAY   shift, and go to state 193
    TYPE_STRUCT  shift, and go to state 194

    type_specifier  go to state 273
    basic_type      go to state 196
    array_type      go to state 197
    struct_type     go to state 198


State 261

   58 function_declaration: function_type IDENTIFIER COLON type_specifier declaration_list statement_list • END_FUNCTION
   74 statement_list: statement_list • statement

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    END_FUNCTION     shift, and go to state 274
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 262

   88 if_statement: IF expression THEN statement_list ELSE statement_list END_IF •

    $default  reduce using rule 88 (if_statement)


State 263

   93 elsif_statement: ELSIF expression THEN • statement_list

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 275
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 264

   74 statement_list: statement_list • statement
   90 if_statement: IF expression THEN statement_list elsif_list ELSE statement_list • END_IF

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    END_IF           shift, and go to state 276
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 265

   95 case_statement: CASE expression OF case_list ELSE statement_list END_CASE •

    $default  reduce using rule 95 (case_statement)


State 266

  102 for_statement: FOR IDENTIFIER ASSIGN expression TO expression BY • expression DO statement_list END_FOR

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 277
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 267

  101 for_statement: FOR IDENTIFIER ASSIGN expression TO expression DO • statement_list END_FOR

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 278
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 268

   53 bound_specification: INTEGER_LITERAL RANGE • INTEGER_LITERAL

    INTEGER_LITERAL  shift, and go to state 279


State 269

   50 array_type: TYPE_ARRAY LBRACKET array_bounds RBRACKET • OF type_specifier

    OF  shift, and go to state 280


State 270

   52 array_bounds: array_bounds COMMA • bound_specification

    INTEGER_LITERAL  shift, and go to state 251

    bound_specification  go to state 281


State 271

   36 var_item: IDENTIFIER COLON type_specifier ASSIGN expression SEMICOLON •

    $default  reduce using rule 36 (var_item)


State 272

   59 function_declaration: function_type IDENTIFIER LPAREN parameter_list RPAREN COLON type_specifier • declaration_list statement_list END_FUNCTION

    FUNCTION        shift, and go to state 25
    FUNCTION_BLOCK  shift, and go to state 26
    VAR             shift, and go to state 27
    VAR_INPUT       shift, and go to state 28
    VAR_OUTPUT      shift, and go to state 29
    VAR_IN_OUT      shift, and go to state 30
    VAR_EXTERNAL    shift, and go to state 31
    VAR_GLOBAL      shift, and go to state 32
    VAR_TEMP        shift, and go to state 33
    VAR_CONFIG      shift, and go to state 34
    VAR_CONSTANT    shift, and go to state 35
    TYPE            shift, and go to state 44

    FUNCTION        [reduce using rule 17 (declaration_list)]
    FUNCTION_BLOCK  [reduce using rule 17 (declaration_list)]
    VAR             [reduce using rule 17 (declaration_list)]
    VAR_INPUT       [reduce using rule 17 (declaration_list)]
    VAR_OUTPUT      [reduce using rule 17 (declaration_list)]
    VAR_IN_OUT      [reduce using rule 17 (declaration_list)]
    VAR_EXTERNAL    [reduce using rule 17 (declaration_list)]
    VAR_GLOBAL      [reduce using rule 17 (declaration_list)]
    VAR_TEMP        [reduce using rule 17 (declaration_list)]
    VAR_CONFIG      [reduce using rule 17 (declaration_list)]
    VAR_CONSTANT    [reduce using rule 17 (declaration_list)]
    TYPE            [reduce using rule 17 (declaration_list)]
    $default        reduce using rule 17 (declaration_list)

    declaration_list      go to state 282
    declaration           go to state 47
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52


State 273

   66 parameter_declaration: parameter_category IDENTIFIER COLON type_specifier •
   67                      | parameter_category IDENTIFIER COLON type_specifier • ASSIGN expression

    ASSIGN  shift, and go to state 283

    $default  reduce using rule 66 (parameter_declaration)


State 274

   58 function_declaration: function_type IDENTIFIER COLON type_specifier declaration_list statement_list END_FUNCTION •

    $default  reduce using rule 58 (function_declaration)


State 275

   74 statement_list: statement_list • statement
   93 elsif_statement: ELSIF expression THEN statement_list •

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    $default  reduce using rule 93 (elsif_statement)

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 276

   90 if_statement: IF expression THEN statement_list elsif_list ELSE statement_list END_IF •

    $default  reduce using rule 90 (if_statement)


State 277

  102 for_statement: FOR IDENTIFIER ASSIGN expression TO expression BY expression • DO statement_list END_FOR

    DO  shift, and go to state 284


State 278

   74 statement_list: statement_list • statement
  101 for_statement: FOR IDENTIFIER ASSIGN expression TO expression DO statement_list • END_FOR

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    END_FOR          shift, and go to state 285
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 279

   53 bound_specification: INTEGER_LITERAL RANGE INTEGER_LITERAL •

    $default  reduce using rule 53 (bound_specification)


State 280

   50 array_type: TYPE_ARRAY LBRACKET array_bounds RBRACKET OF • type_specifier

    IDENTIFIER   shift, and go to state 184
    TYPE_BOOL    shift, and go to state 185
    TYPE_BYTE    shift, and go to state 186
    TYPE_INT     shift, and go to state 187
    TYPE_DINT    shift, and go to state 188
    TYPE_REAL    shift, and go to state 189
    TYPE_LREAL   shift, and go to state 190
    TYPE_STRING  shift, and go to state 191
    TYPE_TIME    shift, and go to state 192
    TYPE_ARRAY   shift, and go to state 193
    TYPE_STRUCT  shift, and go to state 194

    type_specifier  go to state 286
    basic_type      go to state 196
    array_type      go to state 197
    struct_type     go to state 198


State 281

   52 array_bounds: array_bounds COMMA bound_specification •

    $default  reduce using rule 52 (array_bounds)


State 282

   19 declaration_list: declaration_list • declaration
   59 function_declaration: function_type IDENTIFIER LPAREN parameter_list RPAREN COLON type_specifier declaration_list • statement_list END_FUNCTION

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    FUNCTION         shift, and go to state 25
    FUNCTION_BLOCK   shift, and go to state 26
    VAR              shift, and go to state 27
    VAR_INPUT        shift, and go to state 28
    VAR_OUTPUT       shift, and go to state 29
    VAR_IN_OUT       shift, and go to state 30
    VAR_EXTERNAL     shift, and go to state 31
    VAR_GLOBAL       shift, and go to state 32
    VAR_TEMP         shift, and go to state 33
    VAR_CONFIG       shift, and go to state 34
    VAR_CONSTANT     shift, and go to state 35
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    TYPE             shift, and go to state 44
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    declaration           go to state 95
    var_declaration       go to state 48
    var_category          go to state 49
    type_declaration      go to state 50
    function_declaration  go to state 51
    function_type         go to state 52
    statement_list        go to state 287
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 283

   67 parameter_declaration: parameter_category IDENTIFIER COLON type_specifier ASSIGN • expression

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    PLUS             shift, and go to state 76
    MINUS            shift, and go to state 77
    NOT              shift, and go to state 78
    LPAREN           shift, and go to state 45

    expression           go to state 288
    logical_expr         go to state 80
    comparison_expr      go to state 81
    additive_expr        go to state 82
    multiplicative_expr  go to state 83
    unary_expr           go to state 84
    primary_expr         go to state 85
    function_call        go to state 86
    array_access         go to state 67
    member_access        go to state 68


State 284

  102 for_statement: FOR IDENTIFIER ASSIGN expression TO expression BY expression DO • statement_list END_FOR

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    INTEGER_LITERAL  [reduce using rule 72 (statement_list)]
    REAL_LITERAL     [reduce using rule 72 (statement_list)]
    BOOL_LITERAL     [reduce using rule 72 (statement_list)]
    STRING_LITERAL   [reduce using rule 72 (statement_list)]
    WSTRING_LITERAL  [reduce using rule 72 (statement_list)]
    TIME_LITERAL     [reduce using rule 72 (statement_list)]
    DATE_LITERAL     [reduce using rule 72 (statement_list)]
    IDENTIFIER       [reduce using rule 72 (statement_list)]
    IF               [reduce using rule 72 (statement_list)]
    CASE             [reduce using rule 72 (statement_list)]
    FOR              [reduce using rule 72 (statement_list)]
    WHILE            [reduce using rule 72 (statement_list)]
    REPEAT           [reduce using rule 72 (statement_list)]
    EXIT             [reduce using rule 72 (statement_list)]
    CONTINUE         [reduce using rule 72 (statement_list)]
    RETURN           [reduce using rule 72 (statement_list)]
    LPAREN           [reduce using rule 72 (statement_list)]
    $default         reduce using rule 72 (statement_list)

    statement_list        go to state 289
    statement             go to state 54
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 285

  101 for_statement: FOR IDENTIFIER ASSIGN expression TO expression DO statement_list END_FOR •

    $default  reduce using rule 101 (for_statement)


State 286

   50 array_type: TYPE_ARRAY LBRACKET array_bounds RBRACKET OF type_specifier •

    $default  reduce using rule 50 (array_type)


State 287

   59 function_declaration: function_type IDENTIFIER LPAREN parameter_list RPAREN COLON type_specifier declaration_list statement_list • END_FUNCTION
   74 statement_list: statement_list • statement

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    END_FUNCTION     shift, and go to state 290
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 288

   67 parameter_declaration: parameter_category IDENTIFIER COLON type_specifier ASSIGN expression •

    $default  reduce using rule 67 (parameter_declaration)


State 289

   74 statement_list: statement_list • statement
  102 for_statement: FOR IDENTIFIER ASSIGN expression TO expression BY expression DO statement_list • END_FOR

    INTEGER_LITERAL  shift, and go to state 16
    REAL_LITERAL     shift, and go to state 17
    BOOL_LITERAL     shift, and go to state 18
    STRING_LITERAL   shift, and go to state 19
    WSTRING_LITERAL  shift, and go to state 20
    TIME_LITERAL     shift, and go to state 21
    DATE_LITERAL     shift, and go to state 22
    IDENTIFIER       shift, and go to state 23
    IF               shift, and go to state 36
    CASE             shift, and go to state 37
    FOR              shift, and go to state 38
    END_FOR          shift, and go to state 291
    WHILE            shift, and go to state 39
    REPEAT           shift, and go to state 40
    EXIT             shift, and go to state 41
    CONTINUE         shift, and go to state 42
    RETURN           shift, and go to state 43
    LPAREN           shift, and go to state 45

    statement             go to state 102
    assignment_statement  go to state 55
    expression_statement  go to state 56
    if_statement          go to state 57
    case_statement        go to state 58
    for_statement         go to state 59
    while_statement       go to state 60
    repeat_statement      go to state 61
    return_statement      go to state 62
    exit_statement        go to state 63
    continue_statement    go to state 64
    primary_expr          go to state 65
    function_call         go to state 66
    array_access          go to state 67
    member_access         go to state 68


State 290

   59 function_declaration: function_type IDENTIFIER LPAREN parameter_list RPAREN COLON type_specifier declaration_list statement_list END_FUNCTION •

    $default  reduce using rule 59 (function_declaration)


State 291

  102 for_statement: FOR IDENTIFIER ASSIGN expression TO expression BY expression DO statement_list END_FOR •

    $default  reduce using rule 102 (for_statement)
